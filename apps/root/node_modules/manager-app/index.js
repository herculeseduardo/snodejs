var 
	 constants = require('constants/index.js')
	 ,util     = require('util/index.js')
	 ,path 	   = require("path")
	,fs		   = require('fs');

exports.teste = function(req,res) {
	return {teste : "teste"};
};

exports.list_spaces = function(req,res,callback) {

	var ret = {};
	ret.list = [];
	var data = fs.readdirSync(constants.path_apps);  	

  	for(var i in data){
  		if(!(data[i] == 'node_modules') && !(data[i] == 'root')){
  			util.log('read path ('+data[i]+')');
  			var dataFile = fs.readFileSync(constants.path_apps+data[i]+'/.info');
		  	var content_file = {};
			if(!data || !JSON.parse(dataFile)){
				content_file = {};
			}else{
				content_file = JSON.parse(dataFile);
			}				
			ret.list.push(content_file);
  		}
  	}  	
  	callback(ret);
}

exports.remove_space = function(req,res, callback) {
	try{
		exports.rmdir(constants.path_apps+req.namespace+'/node_modules');
	}catch(e){
		util.error(e);
	}
	try{		
		exports.rmdir(constants.path_apps+req.namespace);
		callback({iserror : false, msg : 'Removido com Sucesso', type : 'success'});
	}catch(e){
		util.error(e);
	}
};

exports.create_space = function(req,res, callback) {	
	fs.mkdir(constants.path_apps+req.namespace, 0775, function() {
		exports.config_namespace(constants.path_apps+req.namespace
			, req
			, function(ret) {
				callback(ret);
		});			
	});	
};

exports.config_namespace =  function(path, obj, callback) {	
	var ret = {};
	ret.iserror = true;
	ret.msg = 'teste';
	ret.type = 'error';
	 fs.readFile(path+'/.info', 'utf8', function (err,data) {
		//se houver erro, vamos mostrá-lo no console
		if (err) {
			util.log(err);			
			ret.msg = err;
			ret.type = 'error';
		} else {
			util.log("Arquivo encontrado");
		}		

		var content_file = {};

		if(!data || !JSON.parse(data)){
			content_file = {};
		}else{
			content_file = JSON.parse(data);
		}

		content_file.namespace = obj.namespace;
		content_file.author = obj.author;
		content_file.description = obj.description;

		fs.writeFile(path+'/.info', JSON.stringify(content_file), function(err) {
			//se houver erro, colocamos no console, se não, dizemos que o arquivo foi salvo
			if(err) {
				util.log(err);				
				ret.msg = err;
				ret.type = 'error';
			} else {
				util.log("Arquivo salvo");
				ret.iserror = false;
				ret.type = 'success';
				ret.msg = "Space criado com sucesso";												
			}					
		});

		var content_index = "console.log('load "+content_file.namespace+" ....');\n\n"

			+"exports.construct = function(config) {\n"
			+"\tconfig.register_path_get('/', exports.init);\n"
			+"};\n\n"

			+"exports.init = function(req, res){\n\n"
			+"\tres.end('<h1>Default Response [Space] ("+content_file.namespace+")</h1>');\n\n"
			+"};\n\n"
			+"console.log('load "+content_file.namespace+" [ok]');";

		fs.writeFile(path+'/index.js', content_index, function(err) {
			//se houver erro, colocamos no console, se não, dizemos que o arquivo foi salvo
			if(err) {
				util.log(err);				
				ret.msg = err;
				ret.type = 'error';
			} else {
				util.log("Arquivo salvo");
				ret.iserror = false;
				ret.msg = "Space criado com sucesso";
				ret.type = 'success';
				fs.mkdir(path+'/node_modules', 0775, function() {
					callback(ret);	
				});
			}					
		});

		
	});
};

exports.rmdir = function(dir) {
	var list = fs.readdirSync(dir);
	for(var i = 0; i < list.length; i++) {
		var filename = path.join(dir, list[i]);
		var stat = fs.statSync(filename);
		
		if(filename == "." || filename == "..") {
		// pass these files
		} else if(stat.isDirectory()) {
		// rmdir recursively
			rmdir(filename);
		} else {
		// rm fiilename
			fs.unlinkSync(filename);
		}
	}
	fs.rmdirSync(dir);
};

exports.file_upload = function(req, res) {
    var tmp_path = req.files.my_file.path;    
    var local_path = constants.tmp + req.files.my_file.name;
    console.log(local_path);
    res.end('TMP');
};